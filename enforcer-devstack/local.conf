
# charif

[[local|localrc]]

#FLAT_INTERFACE=enp3s0f1
#HOST_IP_IFACE=enp3s0f1

# enable Neutron
disable_service n-net
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
#enable_service q-l3
enable_service q-meta
enable_service q-metering
enable_service neutron
enable_service horizon
enable_service q-fwaas
enable_service q-vpn
enable_service q-lbaasv2
#enable_service q-lbaas
enable_service octavia
enable_service o-cw
enable_service o-hk
enable_service o-hm
enable_service o-api


# enable lbaas plugin to neutron
enable_plugin neutron https://git.openstack.org/openstack/neutron master
enable_plugin neutron-lbaas git://git.openstack.org/openstack/neutron-lbaas master
enable_plugin octavia https://github.com/openstack/octavia.git
enable_plugin neutron-lbaas-dashboard https://git.openstack.org/openstack/neutron-lbaas-dashboard master
#NEUTRON_LBAAS_SERVICE_PROVIDERV2="LOADBALANCERV2:Haproxy:neutron_lbaas.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default"
#NEUTRON_LBAAS_SERVICE_PROVIDERV2="LOADBALANCERV2:Octavia:neutron_lbaas.drivers.octavia.driver.OctaviaDriver:default"
NEUTRON_LBAAS_SERVICE_PROVIDERV2="LOADBALANCERV2:opendaylight:networking_odl.lbaas.driver_v2.OpenDaylightLbaasDriverV2:default"

enable_plugin tap-as-a-service https://github.com/openstack/tap-as-a-service
enable_service taas
enable_service taas_openvswitch_agent
TAAS_SERVICE_DRIVER=TAAS:TAAS:neutron_taas.services.taas.service_drivers.taas_rpc.TaasRpcDriver:default
Q_ML2_PLUGIN_EXT_DRIVERS=port_security

HOST_IP=10.0.0.143
SERVICE_HOST=$HOST_IP
Q_HOST=$SERVICE_HOST

#ML2 Details

ODL_RELEASE=1.8.1-Carbon
enable_plugin networking-odl http://git.openstack.org/openstack/networking-odl
ODL_MODE=externalodl
ODL_MGR_IP=10.0.0.204
ODL_PORT=8181
#ODL_MODE=allinone
Q_ML2_PLUGIN_MECHANISM_DRIVERS=opendaylight,logger
#ODL_GATE_SERVICE_PROVIDER=vpnservice
disable_service q-l3
ML2_L3_PLUGIN=odl-router
ODL_L3=True
ODL_PROVIDER_MAPPINGS=br-ex:enp3s0f1
# for old netvirt (ovsdb based)
ODL_PROVIDER_MAPPINGS=physnet1:enp3s0f1 # for new netvirt (vpnservice based)
#ODL_PROVIDER_MAPPINGS=public:enp3s0f1
ODL_DHCP_SERVICE=False


Q_PLUGIN=ml2

PHYSICAL_NETWORK=enp3s0f1
PUBLIC_INTERFACE=enp3s0f1
OVS_PHYSICAL_BRIDGE=br-ex




## Neutron options
Q_USE_SECGROUP=True
FLOATING_RANGE="10.1.0.0/24"
IPV4_ADDRS_SAFE_TO_USE="10.2.0.0/24"
Q_FLOATING_ALLOCATION_POOL=start=10.1.0.25,end=10.1.0.30
PUBLIC_NETWORK_GATEWAY="10.1.0.1"

enable_plugin neutron-vpnaas https://git.openstack.org/openstack/neutron-vpnaas master

# Optional, to enable tempest configuration as part of devstack
#enable_service tempest

# enable Heat
enable_plugin heat https://git.openstack.org/openstack/heat master
enable_service heat h-api h-api-cfn h-api-cw h-eng 

# enable ceilometer
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git master
enable_service ceilometer
#CEILOMETER_BACKEND=gnocchi
CEILOMETER_BACKEND=mysql
CEILOMETER_EVENT_ALARM=True
#GNOCCHI_COORDINATOR_URL=redis://localhost:6379?timeout=5
CEILOMETER_PIPELINE_INTERVAL=10


enable_plugin aodh https://git.openstack.org/openstack/aodh master
enable_service aodh-evaluator aodh-notifier aodh-api



enable_plugin gnocchi git://git.openstack.org/openstack/gnocchi
enable_service gnocchi-api,gnocchi-metricd
enable_service gnocchi-grafana
notification_driver=nova.openstack.common.notifier.rabbit_notifier
#notification_driver=ceilometer.compute.nova_notifier
#notification_driver = nova.openstack.common.notifier.rpc_notifier 



# add enough storage to make it useful
VOLUME_GROUP="stack-volumes"
VOLUME_NAME_PREFIX="volume-"
VOLUME_BACKING_FILE_SIZE=256000M

# Minimal Contents
# ----------------

# While ``stack.sh`` is happy to run without ``localrc``, devlife is better when
# there are a few minimal variables set:

IMAGE_URLS="https://cloud-images.ubuntu.com/trusty/current/trusty-server-cloudimg-amd64-disk1.img"

# If the ``SERVICE_TOKEN`` and ``*_PASSWORD`` variables are not set
# here you will be prompted to enter values for them by ``stack.sh``
# and they will be added to ``local.conf``.
SERVICE_TOKEN=azertytoken
ADMIN_PASSWORD=admin
DATABASE_PASSWORD=dbstack
RABBIT_PASSWORD=qstack
SERVICE_PASSWORD=$ADMIN_PASSWORD


# Logging
# -------

# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
LOGFILE=$DEST/logs/stack.sh.log

#-----------------------------
# Devstack configurations
#-----------------------------
LOGDIR=$DEST/logs
SCREEN_LOGDIR=$LOGDIR
SCREEN_HARDSTATUS="%{= rw} %H %{= wk} %L=%-w%{= bw}%30L> %n%f %t*%{= wk}%+Lw%-17< %-=%{= gk} %y/%m/%d %c"
LOGFILE=$LOGDIR/devstack.log
LOGDAYS=1
#LOG_COLOR=False



# Old log files are automatically removed after 7 days to keep things neat.  Change
# the number of days by setting ``LOGDAYS``.
LOGDAYS=2

# Nova logs will be colorized if ``SYSLOG`` is not set; turn this off by setting
# ``LOG_COLOR`` false.
#LOG_COLOR=False


# Using master branches
# ---------------------------------

# Uncomment these to grab the master branches from the repos:
CINDER_BRANCH=master
GLANCE_BRANCH=master
HORIZON_BRANCH=master
KEYSTONE_BRANCH=master
KEYSTONECLIENT_BRANCH=master
NOVA_BRANCH=master
NOVACLIENT_BRANCH=master
NEUTRON_BRANCH=master
SWIFT_BRANCH=master


# Swift
# -----

# Swift is now used as the back-end for the S3-like object store. If Nova's
# objectstore (``n-obj`` in ``ENABLED_SERVICES``) is enabled, it will NOT
# run if Swift is enabled. Setting the hash value is required and you will
# be prompted for it if Swift is enabled so just set it to something already:
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5

# For development purposes the default of 3 replicas is usually not required.
# Set this to 1 to save some resources:
SWIFT_REPLICAS=1

# The data for Swift is stored by default in (``$DEST/data/swift``),
# or (``$DATA_DIR/swift``) if ``DATA_DIR`` has been set, and can be
# moved by setting ``SWIFT_DATA_DIR``. The directory will be created
# if it does not exist.
SWIFT_DATA_DIR=$DEST/data

[[post-config|$NEUTRON_CONF]]
[DEFAULT]
service_plugins = networking_odl.l3.l3_odl.OpenDaylightL3RouterPlugin
[ml2_odl]
url = http://10.0.0.204:8080/controller/nb/v2/neutron
password = admin
username = admin


